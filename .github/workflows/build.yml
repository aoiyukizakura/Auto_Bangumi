name: Build Docker

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  push:
  workflow_dispatch: 
    inputs:
      target_branch:
        description: '选择要运行的分支'
        required: true
        type: choice
        options:
          - main
          - beta
          - feat/link-bangumi-collection

jobs:
  version-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
      - name: If release
        id: release
        run: |
          if [[ '${{ github.event_name }}' == 'pull_request' && '${{ github.event.pull_request.head.ref }}' == *'dev'* ]]; then
            if [ ${{ github.event.pull_request.merged }} == true ]; then
              echo "release=1" >> $GITHUB_OUTPUT
            else
              echo "release=0" >> $GITHUB_OUTPUT
            fi
          elif [[ '${{ github.event_name }}' == 'push' && (${{ github.ref }} == *'alpha'* || ${{ github.ref }} == *'beta'*) ]]; then
            echo "release=1" >> $GITHUB_OUTPUT
          else
            echo "release=0" >> $GITHUB_OUTPUT
          fi
      - name: If dev
        id: dev
        run: |
          if [[ '${{ github.event_name }}' == 'push' ]]; then
            echo "dev=1" >> $GITHUB_OUTPUT
          else
            echo "dev=0" >> $GITHUB_OUTPUT
          fi
      - name: Check version
        id: version
        run: |
          if [ '${{ github.event_name }}' == 'pull_request' ]; then
            if [ ${{ github.event.pull_request.merged }} == true ]; then
              echo "version=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
            fi
          elif [[ ${{ github.event_name }} == 'push' ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=Test" >> $GITHUB_OUTPUT
          fi
      - name: Check result
        run: |
          echo "release: ${{ steps.release.outputs.release }}"
          echo "dev: ${{ steps.dev.outputs.dev }}"
          echo "version: ${{ steps.version.outputs.version }}"
    outputs:
      release: ${{ steps.release.outputs.release }}
      dev: ${{ steps.dev.outputs.dev }}
      version: ${{ steps.version.outputs.version }}

  build-webui:
    runs-on: ubuntu-latest
    needs: [version-info]
    if: ${{ needs.version-info.outputs.release == 1 || needs.version-info.outputs.dev == 1 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: cd webui && pnpm install

      - name: Build
        run: |
          cd webui && pnpm build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: webui/dist

  build-docker:
    runs-on: ubuntu-latest
    needs: [build-webui, version-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Create Version info via tag
        working-directory: ./backend/src
        run: |
          echo ${{ needs.version-info.outputs.version }}
          echo "VERSION='${{ needs.version-info.outputs.version }}'" >> module/__version__.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata main
        if: ${{ needs.version-info.outputs.release == 1 && needs.version-info.outputs.dev != 1 }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            estrellaxd/auto_bangumi
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.version-info.outputs.version }}
            type=raw,value=latest

      - name: Docker metadata dev
        if: ${{ needs.version-info.outputs.dev == 1 }}
        id: meta-dev
        uses: docker/metadata-action@v4
        with:
          images: |
            estrellaxd/auto_bangumi
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.version-info.outputs.version }}
            type=raw,value=dev-latest

      - name: Login to DockerHub
        if: ${{ needs.version-info.outputs.release == 1 }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ needs.version-info.outputs.release == 1 }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/src/dist

      - name: Build and push
        if: ${{ needs.version-info.outputs.release == 1 && needs.version-info.outputs.dev != 1 }}
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.output.name }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: True
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Build and push dev
        if: ${{ needs.version-info.outputs.dev == 1 }}
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.output.name }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

      - name: Build test
        if: ${{ needs.version-info.outputs.release == 0 }}
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.output.name }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: false
          tags: estrellaxd/auto_bangumi:test
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
